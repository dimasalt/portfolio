# name: Build and deployment on self hosted VPS

# on: 
#   push:
#     branches:
#       [main]
# jobs:
#   lint:
#     #sshd lsb_release -a
#     #runs-on: ubuntu-latest
#     runs-on: ubuntu-22.04
    
#     name: Performing lint
#     steps:
#       - uses: actions/checkout@v4

#       - name: Install npm
#         run: npm ci        
#       - name: run lint
#         run: npm run lint

#   build: 
#     needs: [lint]
#     runs-on: ubuntu-22.04
#     strategy:
#       matrix:
#         node: [ 20, 22 ]

#     name: Build on Node 20 LTS and Node 22
#     steps:     
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: ${{ matrix.node }}
#           cache: 'npm'
#       - name: Install npm
#         run: npm ci 
#       - name: build Next.js project
#         run: npm run build

#   deploy:
#     needs: [build]
#     runs-on: self-hosted

#     # env:
#     #   DB_HOST: ${{ secrets.DB_HOST }}
#     #   DB_NAME: ${{ secrets.DB_NAME }}
#     #   DB_USER: ${{ secrets.DB_USER }}
#     #   DB_PASS: ${{ secrets.DB_PASS }}

#     name: Deploys application to VPS
#     steps:
#       - name: Checkout our main branch
#         uses: actions/checkout@v4
      
#       - name: Create .env file
#         run: |         
#          echo 'DATABASE_URL="${{secrets.DATABASE_URL}}"' >> .env

#       - name: Run docker
#         run: docker compose up --build --force-recreate -d

#       # -f option to clear cache without any promts
#       - name: Clear all docker cache to keep VPS disk clean
#         run: docker builder prune -f
      
#       #- name: Clear all unused resources by docker
#       #  run: docker system prune -a -f



name: .NET

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4      
      with:
        dotnet-version: 9.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

  deploy:
    needs: [build]
    runs-on: self-hosted

    name: Deploy to VPS
    steps:
      - name: Checkout our main branch
        uses: actions/checkout@v4
                  
      - name: Run docker
        run: docker compose up --build --force-recreate -d
      
      # -f option to clear cache without any promts
      - name: Clear all docker cache to keep VPS disk clean
        run: docker builder prune -f
            
       #- name: Clear all unused resources by docker
       #  run: docker system prune -a -f